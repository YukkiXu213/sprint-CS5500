name: Release Deployment

on:
  release:
    types: [published]

jobs:
  deploy:
    if: ${{ github.event.release.target_commitish == 'main' || github.event.release.target_commitish == 'master' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }} .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }}

      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          port: ${{ secrets.REMOTE_PORT }}
          script: |
            echo "Pulling new image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }}
            echo "Stopping and removing existing container..."
            docker stop backend_app || true
            docker rm backend_app || true
            echo "Starting new container..."
            docker run -d --name backend_app -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.event.release.tag_name }}
            echo "Waiting for container to start..."
            sleep 10
            echo "Verifying deployment via curl..."
            curl -f http://localhost:8000/docs
